{"version":3,"sources":["Common/SuperInputText/SuperInputText.module.css","Common/SuperButton/SuperButton.module.css","Common/SuperCheckbox/SuperCheckbox.module.css","Common/SuperEditableSpan/SuperEditableSpan.module.css","Common/SuperRadio/SuperRadio.module.css","Common/SuperRange/SuperRange.module.css","Common/SuperSelect/SuperSelect.module.css","ui/Routes/Routes.tsx","reportWebVitals.ts","ui/Error404/Error404.tsx","ui/Registration/Registration.tsx","ui/Profile/Profile.tsx","ui/ResetPassword/ResetPassword.tsx","ui/CreateNewPassword/CreateNewPassword.tsx","Common/SuperButton/SuperButton.tsx","Common/SuperCheckbox/SuperCheckbox.tsx","Common/SuperInputText/SuperInputText.tsx","Common/SuperEditableSpan/SuperEditableSpan.tsx","Common/SuperRadio/SuperRadio.tsx","Common/SuperRange/SuperRange.tsx","Common/SuperSelect/SuperSelect.tsx","ui/SuperComponents/SuperComponents.tsx","ui/LogIn/LogIn.tsx","ui/Header/Header.tsx","bll/logInReducer.ts","bll/registrationReducer.ts","bll/profileReducer.ts","bll/resetPasswordReducer.ts","bll/createNewPasswordReducer.ts","bll/error404Reducer.ts","bll/store.ts","App.tsx","index.tsx","ui/Header/Header.module.css"],"names":["module","exports","Path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","Registration","Profile","ResetPassword","CreateNewPassword","SuperButton","red","className","restProps","finalClassName","classes","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","select","SuperComponents","style","fontWeight","marginLeft","LogIn","Routes","exact","path","render","from","to","Header","nav","item","activeClassName","active","initState","rootReducer","combineReducers","logIn","state","action","registration","profile","resetPassword","createNewPassword","error404","store","createStore","applyMiddleware","thunk","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e5323ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__31TpJ\",\"errorInput\":\"SuperInputText_errorInput__11qMv\",\"error\":\"SuperInputText_error__5sbmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__I_xaU\",\"red\":\"SuperButton_red__1n-A6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Da0A\",\"spanClassName\":\"SuperCheckbox_spanClassName__3o8Fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__3yIAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio___kynf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1SC6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1Ux4J\"};","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Error404} from \"../Error404/Error404\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {Profile} from \"../Profile/Profile\";\r\nimport {ResetPassword} from \"../ResetPassword/ResetPassword\";\r\nimport {CreateNewPassword} from \"../CreateNewPassword/CreateNewPassword\";\r\nimport {SuperComponents} from \"../SuperComponents/SuperComponents\";\r\nimport {LogIn} from \"../LogIn/LogIn\";\r\n\r\nexport enum Path {\r\n    LogIn = \"/login\",\r\n    Registration = \"/registration\",\r\n    Profile = \"/profile\",\r\n    ResetPassword = \"/resetPassword\",\r\n    CreateNewPassword = \"/createNewPassword\",\r\n    SuperComponents = \"/superComponents\",\r\n    Error404 = \"/404\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <div>Empty page</div>}/>\r\n                <Route path={Path.LogIn} render={() => <LogIn/>}/>\r\n                <Route path={Path.Registration} render={() => <Registration/>}/>\r\n                <Route path={Path.Profile} render={() => <Profile/>}/>\r\n                <Route path={Path.ResetPassword} render={() => <ResetPassword/>}/>\r\n                <Route\r\n                    path={Path.CreateNewPassword}\r\n                    render={() => <CreateNewPassword/>}\r\n                />\r\n                <Route path={Path.SuperComponents} render={() => <SuperComponents/>}/>\r\n                <Route path={Path.Error404} render={() => <Error404/>}/>\r\n                <Redirect from={\"*\"} to={Path.Error404}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n    return <div>Error 404</div>;\r\n};","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n    return <div>Registration</div>;\r\n};","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n    return <div>Profile</div>;\r\n};","import React from \"react\";\r\n\r\nexport const ResetPassword = () => {\r\n    return <div>Reset password</div>;\r\n};","import React from \"react\";\r\n\r\nexport const CreateNewPassword = () => {\r\n    return <div>Create new password</div>;\r\n};","\r\nimport React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport classes from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n    ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n    >;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean;\r\n};\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\r\n                                                                red,\r\n                                                                className,\r\n                                                                ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n                                                            }) => {\r\n    const finalClassName = `${red ? classes.red : classes.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n};","import React, {\r\n    ChangeEvent,\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n} from \"react\";\r\nimport classes from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void;\r\n    spanClassName?: string;\r\n};\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n                                                                    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n                                                                    onChange,\r\n                                                                    onChangeChecked,\r\n                                                                    className,\r\n                                                                    spanClassName,\r\n                                                                    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n                                                                    ...restProps // все остальные пропсы попадут в объект restProps\r\n                                                                }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked); // works with both onChange and onChangeChecked !\r\n    };\r\n\r\n    const finalInputClassName = `${classes.checkbox} ${\r\n        className ? className : \"\"\r\n    }`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={classes.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n};","import React, {\r\n    ChangeEvent,\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    KeyboardEvent,\r\n} from \"react\";\r\nimport classes from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n    >;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void;\r\n    onEnter?: () => void;\r\n    error?: string;\r\n    spanClassName?: string;\r\n};\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n                                                                      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n                                                                      onChange,\r\n                                                                      onChangeText,\r\n                                                                      onKeyPress,\r\n                                                                      onEnter,\r\n                                                                      error,\r\n                                                                      className,\r\n                                                                      spanClassName,\r\n\r\n                                                                      ...restProps // все остальные пропсы попадут в объект restProps\r\n                                                                  }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && // если есть пропс onChange\r\n        onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter && // если есть пропс onEnter\r\n        e.key === \"Enter\" && // и если нажата кнопка Enter\r\n        onEnter(); // то вызвать его\r\n    };\r\n\r\n    const finalSpanClassName = `${classes.error} ${\r\n        spanClassName ? spanClassName : \"\"\r\n    }`;\r\n    const finalInputClassName = `${\r\n        error ? classes.errorInput : classes.superInput\r\n    } ${className}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n};","import React, {\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    HTMLAttributes,\r\n    useState,\r\n} from \"react\";\r\nimport classes from \"./SuperEditableSpan.module.css\";\r\nimport { SuperInputText } from \"../SuperInputText/SuperInputText\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n    >;\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n    HTMLAttributes<HTMLSpanElement>,\r\n    HTMLSpanElement\r\n    >;\r\n\r\ntype SuperEditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void;\r\n    onEnter?: () => void;\r\n    error?: string;\r\n    spanClassName?: string; // input props\r\n\r\n    spanProps?: DefaultSpanPropsType; // span props\r\n};\r\n\r\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\r\n                                                                       autoFocus, // игнорировать изменение этого пропса\r\n                                                                       onBlur,\r\n                                                                       onEnter,\r\n                                                                       spanProps,\r\n\r\n                                                                       ...restProps // все остальные пропсы попадут в объект restProps\r\n                                                                   }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const { children, onDoubleClick, className, ...restSpanProps } =\r\n    spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false);\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false);\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (\r\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n    ) => {\r\n        setEditMode(true);\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${classes.editableSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode ? (\r\n                <SuperInputText\r\n                    autoFocus\r\n                    onBlur={onBlurCallback}\r\n                    onEnter={onEnterCallback}\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            ) : (\r\n                <span\r\n                    onDoubleClick={onDoubleClickCallBack}\r\n                    className={spanClassName}\r\n                    {...restSpanProps}\r\n                >\r\n          {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                    {children || restProps.value}\r\n        </span>\r\n            )}\r\n        </>\r\n    );\r\n};","import React, {\r\n    ChangeEvent,\r\n    InputHTMLAttributes,\r\n    DetailedHTMLProps,\r\n} from \"react\";\r\nimport classes from \"./SuperRadio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n    >;\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[];\r\n    onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const SuperRadio: React.FC<SuperRadioPropsType> = ({\r\n                                                              type,\r\n                                                              name,\r\n                                                              options,\r\n                                                              value,\r\n                                                              onChange,\r\n                                                              onChangeOption,\r\n                                                              ...restProps\r\n                                                          }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n    };\r\n\r\n    const mappedOptions: any[] = options\r\n        ? options.map((o, i) => (\r\n            <label key={name + \"-\" + i}>\r\n                <input\r\n                    type={\"radio\"}\r\n                    name={name}\r\n                    checked={o === value}\r\n                    value={o}\r\n                    onChange={onChangeCallback}\r\n                    className={classes.radio}\r\n                    {...restProps}\r\n                />\r\n                {o}\r\n            </label>\r\n        ))\r\n        : [];\r\n\r\n    return <>{mappedOptions}</>;\r\n};","import React, {\r\n    ChangeEvent,\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n} from \"react\";\r\nimport classes from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n    >;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & {\r\n    // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void;\r\n    value: number;\r\n};\r\n\r\nexport const SuperRange: React.FC<SuperRangePropsType> = ({\r\n                                                              type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n                                                              onChange,\r\n                                                              onChangeRange,\r\n                                                              className,\r\n\r\n                                                              ...restProps // все остальные пропсы попадут в объект restProps\r\n                                                          }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    };\r\n\r\n    const finalRangeClassName = `${classes.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n};","import React, {\r\n    SelectHTMLAttributes,\r\n    DetailedHTMLProps,\r\n    ChangeEvent,\r\n} from \"react\";\r\nimport classes from \"./SuperSelect.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>,\r\n    HTMLSelectElement>;\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[];\r\n    onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const SuperSelect: React.FC<SuperSelectPropsType> = ({\r\n                                                                options,\r\n                                                                onChange,\r\n                                                                onChangeOption,\r\n                                                                ...restProps\r\n                                                            }) => {\r\n    const mappedOptions: any[] = options\r\n        ? options.map((o, i) => (\r\n            <option key={o + \"-\" + i} value={o}>\r\n                {o}\r\n            </option>\r\n        ))\r\n        : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <select\r\n            onChange={onChangeCallback}\r\n            className={classes.select}\r\n            {...restProps}\r\n        >\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n};","import React from \"react\";\r\nimport {SuperButton} from \"../../Common/SuperButton/SuperButton\";\r\nimport {SuperCheckbox} from \"../../Common/SuperCheckbox/SuperCheckbox\";\r\nimport {SuperEditableSpan} from \"../../Common/SuperEditableSpan/SuperEditableSpan\";\r\nimport {SuperInputText} from \"../../Common/SuperInputText/SuperInputText\";\r\nimport {SuperRadio} from \"../../Common/SuperRadio/SuperRadio\";\r\nimport {SuperRange} from \"../../Common/SuperRange/SuperRange\";\r\nimport {SuperSelect} from \"../../Common/SuperSelect/SuperSelect\";\r\n\r\nexport const SuperComponents = () => {\r\n    return (\r\n        <div>\r\n            <div>SuperComponents</div>\r\n            <div>\r\n                <SuperInputText/>\r\n                <span style={{fontWeight: \"bold\"}}>InputText</span>\r\n            </div>\r\n            <div>\r\n                <SuperButton> x </SuperButton>\r\n                <span style={{fontWeight: \"bold\"}}>Button</span>\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox/>\r\n                <span style={{fontWeight: \"bold\"}}>Checkbox</span>\r\n            </div>\r\n            <div>\r\n                <SuperEditableSpan value={\"Enter your text here...\"}/>\r\n                <span style={{fontWeight: \"bold\"}}>EditableSpan</span>\r\n            </div>\r\n            <div>\r\n                <SuperSelect options={[\"x\", \"y\", \"z\"]} value={\"y\"}/>\r\n                <span style={{fontWeight: \"bold\"}}>Select</span>\r\n            </div>\r\n            <div>\r\n                <SuperRadio name={\"radio\"} options={[\"x\", \"y\", \"z\"]} value={\"y\"}/>\r\n                <span style={{fontWeight: \"bold\", marginLeft: \"10px\"}}>Radio</span>\r\n            </div>\r\n            <div>\r\n                <SuperRange value={50}/>\r\n                <span style={{fontWeight: \"bold\"}}>Range</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\nexport const LogIn = () => {\r\n    return <div>Log in</div>;\r\n};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\nimport {Path} from \"../Routes/Routes\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to={Path.LogIn} activeClassName={classes.active}>\r\n                    Log in\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={Path.Registration} activeClassName={classes.active}>\r\n                    Registration\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={Path.Profile} activeClassName={classes.active}>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={Path.ResetPassword} activeClassName={classes.active}>\r\n                    Reset password\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={Path.CreateNewPassword} activeClassName={classes.active}>\r\n                    Create new password\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={Path.SuperComponents} activeClassName={classes.active}>\r\n                    SuperComponents\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const logInReducer = (state = initState, action: any): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const registrationReducer = (\r\n    state = initState,\r\n    action: any\r\n): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const profileReducer = (\r\n    state = initState,\r\n    action: any\r\n): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const resetPasswordReducer = (\r\n    state = initState,\r\n    action: any\r\n): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const createNewPasswordReducer = (\r\n    state = initState,\r\n    action: any\r\n): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const error404Reducer = (\r\n    state = initState,\r\n    action: any\r\n): InitStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {logInReducer} from \"./logInReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {resetPasswordReducer} from \"./resetPasswordReducer\";\r\nimport {createNewPasswordReducer} from \"./createNewPasswordReducer\";\r\nimport {error404Reducer} from \"./error404Reducer\";\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nconst rootReducer = combineReducers({\r\n    logIn: logInReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    resetPassword: resetPasswordReducer,\r\n    createNewPassword: createNewPasswordReducer,\r\n    error404: error404Reducer,\r\n});\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from \"react\";\nimport \"./App.css\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Header} from \"./ui/Header/Header\";\nimport {store} from \"./bll/store\";\nimport {Routes} from \"./ui/Routes/Routes\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Provider store={store}>\n                    <Header/>\n                    <Routes/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1iKmz\",\"item\":\"Header_item__3UInb\",\"active\":\"Header_active__1OdwK\"};"],"sourceRoot":""}